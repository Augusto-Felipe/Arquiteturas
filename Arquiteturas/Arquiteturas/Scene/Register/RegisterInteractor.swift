//
//  RegisterInteractor.swift
//  Arquiteturas
//
//  Created by Felipe Augusto Correia on 23/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterBusinessLogic
{
    func doSomething(request: Register.Something.Request)
}

protocol RegisterDataStore
{
    //var name: String { get set }
}

class RegisterInteractor: RegisterBusinessLogic, RegisterDataStore
{
    var presenter: RegisterPresentationLogic?
    var worker: RegisterWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Register.Something.Request)
    {
        worker = RegisterWorker()
        worker?.register(user: request.user, successHandler: {[weak self] user in
            if let self {
                let response = Register.Something.Response(user: user ?? User())
                self.presenter?.presentSomething(response: response)
            }
        }, failureHandler: {[weak self] error in
            if let self,
               let error = error {
                let viewError = Register.Something.ViewError(error: error)
                self.presenter?.presentError(error: viewError)
            }
        })
        
    }
}
