//
//  RegisterViewController.swift
//  Arquiteturas
//
//  Created by Felipe Augusto Correia on 23/07/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterDisplayLogic: AnyObject
{
    func displaySomething(viewModel: Register.Something.ViewModel)
    func displayError(error: Register.Something.ViewError)
}

class RegisterViewController: UIViewController, RegisterDisplayLogic
{
    
    var interactor: RegisterBusinessLogic?
    var router: (NSObjectProtocol & RegisterRoutingLogic & RegisterDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = RegisterInteractor()
        let presenter = RegisterPresenter()
        let router = RegisterRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func loadView() {
        self.view = screen
    }
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.view.backgroundColor = .systemMint
    }
    
    // MARK: Do something
    private lazy var screen: RegisterView = {
        let screen = RegisterView(frame: .zero)
        screen.registerTap = {[weak self] user in
            if let self {
                self.registerTapped(user: user)
            }
        }
        return screen
    }()
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    
    func displaySomething(viewModel: Register.Something.ViewModel)
    {
        router?.routeToHome()
    }
    
    func registerTapped(user: User) {
        let request = Register.Something.Request(user: user)
        interactor?.doSomething(request: request)
    }
    
    func displayError(error: Register.Something.ViewError) {
        let error = error.error.localizedDescription
        let alert = UIAlertController(title: "Erro", message: error, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default))
        self.present(alert, animated: true, completion: nil)
    }
}
